{"version":3,"sources":["api.js","components/Pin/index.js","components/PinContainer/index.js","components/LocationSelector/index.js","App.js","index.js","assets/icon.png"],"names":["WEATHER_API_KEY","process","CITY_API_KEY","GetCoordinatesFromCity","_GetCoordinatesFromCity","apply","this","arguments","_callee","cityname","statecode","countrycode","limit","response","_args","_regeneratorRuntime","wrap","_context","prev","next","length","undefined","axios","get","concat","sent","abrupt","data","t0","stop","GetWeekForecastByCoords","_x","_x2","_GetWeekForecastByCoords","_callee2","lat","lon","_context2","GetForecastByCoords","_x3","_x4","_GetForecastByCoords","_callee3","_context3","GetAllCountries","_GetAllCountries","_callee4","_context4","headers","X-CSCAPI-KEY","GetAllStatesFromCountry","_x5","_GetAllStatesFromCountry","_callee5","country_iso","_context5","GetAllCitiesFromState","_x6","_x7","_GetAllCitiesFromState","_callee6","state_iso","_context6","WeatherPin","props","react_default","a","createElement","className","src","WeatherIcon","alt","WeatherDescription","WeatherTemp","WeatherTempMin","WeatherTempMax","WeatherSensation","WeatherHumidity","backgroundImages","PinContainer","_ref","City","_useState","useState","_useState2","Object","slicedToArray","SelectedCity","setSelectedCity","_useState3","_useState4","SelectedCityForecastWeek","setSelectedCityForecastWeek","_useState5","logo","_useState6","setWeathericon","_useState7","_useState8","setWeatherDescription","_useState9","_useState10","setWeatherTemp","_useState11","_useState12","setWeatherTempMin","_useState13","_useState14","setWeatherTempMax","_useState15","_useState16","setWeatherHumidity","_useState17","_useState18","setWeatherSensation","getCoordinates","_getCoordinates","asyncToGenerator","PinContainer_regeneratorRuntime","mark","countryiso","CoordFromCity","_CoordFromCity$","name","state","country","getForecast","_getForecast","weekforecast","temperatures","weather","main","icon","description","humidity","feels_like","temp","temp_max","temp_min","getForecastWeek","_getForecastWeek","forecasts","forecastWeek","loadedForecast","dayCount","_iterator","_step","_loop","list","_createForOfIteratorHelper","forecast","value","forecastDate","Date","dt","find","date","getDate","getMonth","getFullYear","_forecast$main","_forecast$weather$","push","s","n","done","e","f","finish","useEffect","CountryIso","StateIso","key","body","document","getElementsByTagName","style","backgroundImage","changeBackground","map","LocationSelector","Countries","setCountries","Country","setCountry","States","setStates","State","setState","Cities","setCities","setCity","LocationSelector_regeneratorRuntime","contries","states","iso2","cities","placeholder","onChange","event","select","target","selectedIndex","selectedOption","options","text","city","PinContainer_PinContainer","App","LocationSelector_LocationSelector","ReactDOM","createRoot","getElementById","render","StrictMode","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b7f51cce.chunk.js","sourcesContent":["import axios   from 'axios';\n\nconst WEATHER_API_KEY = process.env.REACT_APP_WHEATER_API_KEY;\nconst CITY_API_KEY = process.env.REACT_APP_CITY_API_KEY;\n\nexport async function GetCoordinatesFromCity(cityname=\"Rio Grande\", statecode, countrycode=\"BR\", limit=5) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${cityname}${statecode ? \",\"+statecode : \"\" }${countrycode ? \",\"+countrycode : \"\" }${limit ? \"&limit=\"+limit : \"\" }&appid=${WEATHER_API_KEY}`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\n\nexport async function GetWeekForecastByCoords(lat, lon) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\n\nexport async function GetForecastByCoords(lat, lon) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\n\nexport async function GetAllCountries(){\n    try {\n        const response = await axios.get(\"https://api.countrystatecity.in/v1/countries\",{\n            headers:{\n                \"X-CSCAPI-KEY\":CITY_API_KEY\n            }\n        });\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\nexport async function GetAllStatesFromCountry(country_iso){\n    try {\n        const response = await axios.get(`https://api.countrystatecity.in/v1/countries/${country_iso}/states`,{\n            headers:{\n                \"X-CSCAPI-KEY\":CITY_API_KEY\n            }\n        });\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\nexport async function GetAllCitiesFromState(country_iso,state_iso){\n    try {\n        const response = await axios.get(`https://api.countrystatecity.in/v1/countries/${country_iso}/states/${state_iso}/cities`,{\n            headers:{\n                \"X-CSCAPI-KEY\":CITY_API_KEY\n            }\n        });\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}","import React from 'react';\nimport './index.css';\nexport default function WeatherPin(props) {\n    return (\n        <div className='main-div'>\n            <div className='div-imagem'>\n                <img className='imagem' src={props.WeatherIcon} alt=\"weather\"></img>    \n                <p className='currentStatus'>{props.WeatherDescription}</p>\n            </div>\n            <div className='div-info'>\n                <div className='div-temps'>\n                    <p className='currentTemp'>{props.WeatherTemp}oC</p>\n                    <p>Min-Max</p>\n                    <div className='div-min-max'>\n                        <p className='currentTempMin'>{props.WeatherTempMin}oC</p>\n                        <p className='currentTempMax'>{props.WeatherTempMax}oC</p>\n                    </div>\n                </div>\n                <p className='currentSensation'>Sensation:{props.WeatherSensation}oC</p>\n                <p className='currentHumidity'>Humidity:{props.WeatherHumidity}%</p>\n            </div>\n        </div>\n\t);\n}","import React from \"react\";\nimport './index.css';\nimport {GetCoordinatesFromCity,GetForecastByCoords,GetWeekForecastByCoords} from '../../api'\nimport { useEffect,useState } from 'react';\nimport Pin from '../Pin'\nimport logo from '../../assets/icon.png'\nconst backgroundImages=[]\n        backgroundImages[\"clear sky\"]=\"https://img3.badfon.ru/original/2560x1600/1/b8/nebo-nebesa-sin-sineva.jpg\";\n        backgroundImages[\"few clouds\"]=\"https://bgfons.com/uploads/clouds/clouds_texture2887.jpg\";\n        backgroundImages[\"scattered clouds\"]=\"https://getwallpapers.com/wallpaper/full/6/5/4/1009663-cloud-desktop-background-1920x1080-windows-xp.jpg\";\n        backgroundImages[\"broken clouds\"]=\"https://wallpapercave.com/wp/wp6932215.jpg\";\n        backgroundImages[\"overcast clouds\"]=\"https://wallpapercave.com/wp/wp6932215.jpg\";\n        backgroundImages[\"shower rain\"]=\"https://www.yahire.com/blogs/wp-content/uploads/2016/06/rain-shelter.jpg\";\n        backgroundImages[\"light rain\"]=\"https://wallpapercave.com/wp/wp2519239.jpg\";\n        backgroundImages[\"rain\"]=\"https://wallpapercave.com/wp/wp2519239.jpg\";\n        backgroundImages[\"moderate rain\"]=\"https://wallpapercave.com/wp/wp2519239.jpg\";\n        backgroundImages[\"thunderstorm\"]=\"https://wallpapercave.com/wp/wp9722346.jpg\";\n        backgroundImages[\"snow\"]=\"https://images.hdqwalls.com/download/forest-winter-snow-3840x2400.jpg\";\n        backgroundImages[\"mist\"]=\"https://res.allmacwallpaper.com/get/Retina-MacBook-Air-13-inch-wallpapers/Day-10--unsplashdaily-2560x1600/17491-11.jpg\";\n\nfunction changeBackground(key){\n    const body=document.getElementsByTagName(\"body\")[0]\n    if(key==null){ \n        body.style.backgroundImage=\"\";\n        return;\n    }\n    body.style.backgroundImage=`url(${backgroundImages[key]})`\n}\n\n\nexport default function PinContainer({ City }) {\n    const [SelectedCity,setSelectedCity] = useState(null);\n    const [SelectedCityForecastWeek,setSelectedCityForecastWeek] = useState([]);\n\n    const [WeatherIcon, setWeathericon] = useState(logo)\n    const [WeatherDescription, setWeatherDescription] = useState('Weather-R')\n    const [WeatherTemp, setWeatherTemp] = useState(0)\n    const [WeatherTempMin, setWeatherTempMin] = useState(0)\n    const [WeatherTempMax, setWeatherTempMax] = useState(0)\n    const [WeatherHumidity, setWeatherHumidity] = useState(0)\n    const [WeatherSensation, setWeatherSensation] = useState(0)\n    async function getCoordinates(cityname,statecode,countryiso){\n        const CoordFromCity=await GetCoordinatesFromCity(cityname,statecode,countryiso)\n        if(CoordFromCity==null||CoordFromCity[0]==null) {\n            setWeatherDescription(\"NOT FOUND\");\n            setWeathericon(logo);\n            setWeatherTemp(0);\n            setWeatherTempMin(0);\n            setWeatherTempMax(0);\n            setWeatherHumidity(0);\n            setWeatherSensation(0);\n            setSelectedCity(null);\n            setSelectedCityForecastWeek([]);\n            return\n        };\n        const { name,state,lat,lon,country }=CoordFromCity[0];\n        setSelectedCity(\n            {\n                name,\n                state,\n                lat,\n                lon,\n                country\n            }\n        )   \n    }\n    async function getForecast(){\n        const weekforecast=await GetForecastByCoords(SelectedCity.lat,SelectedCity.lon)\n        const temperatures=weekforecast.main\n        const weather=weekforecast.weather[0]\n\n        setWeathericon(`http://openweathermap.org/img/wn/${weather.icon}@2x.png`);\n        setWeatherDescription(weather.description);\n\n        setWeatherHumidity(temperatures.humidity);\n        setWeatherSensation(temperatures.feels_like);\n        setWeatherTemp(temperatures.temp);\n        setWeatherTempMax(temperatures.temp_max);\n        setWeatherTempMin(temperatures.temp_min);\n    }\n    async function getForecastWeek(){\n        const weekforecast=await GetWeekForecastByCoords(SelectedCity.lat,SelectedCity.lon)\n        const forecasts=[];\n        const forecastWeek=weekforecast.list\n        const loadedForecast=[];\n        let dayCount=1;\n        for (let forecast of forecastWeek){\n            const forecastDate=new Date(forecast.dt*1000)\n            const dayAlreadyLoaded=loadedForecast.find(date=>date===`${forecastDate.getDate()}/${forecastDate.getMonth()+1}/${forecastDate.getFullYear()}`)\n            if (dayAlreadyLoaded!=null||dayCount>3) continue;\n            const { temp,temp_min,temp_max,humidity,feels_like }=forecast.main\n            const { description,icon}=forecast.weather[0]\n            forecasts.push(\n                {\n                    WeatherTemp:temp,\n                    WeatherTempMin:temp_min,\n                    WeatherTempMax:temp_max,\n                    WeatherHumidity:humidity,\n                    WeatherSensation:feels_like,\n                    WeatherDescription:description,\n                    WeatherIcon:`http://openweathermap.org/img/wn/${icon}@2x.png`\n                }\n            )\n            loadedForecast.push(`${forecastDate.getDate()}/${forecastDate.getMonth()+1}/${forecastDate.getFullYear()}`);\n            dayCount++\n        }\n        setSelectedCityForecastWeek(forecasts)\n    }\n    \n    useEffect(() => {\n        if(City==null) return;\n        const {name,CountryIso,StateIso} = City;\n        if(!name||!CountryIso||!StateIso) return\n        (async ()=>await getCoordinates(name,StateIso,CountryIso))()\n        \n    }, [City])\n    \n    useEffect(()=>{\n        if(SelectedCity==null) return;\n        (async ()=>{\n            await getForecast()\n            await getForecastWeek()\n        })() \n\n    },[SelectedCity])\n    useEffect(()=>{changeBackground(WeatherDescription)},[WeatherDescription])\n\n    return (\n        <div className=\"App\">\n            <div className='main-div-container'>\n                <div className='div-weather-now'>\n\n                        <Pin \n                            WeatherIcon={WeatherIcon}\n                            WeatherDescription={WeatherDescription}\n                            WeatherHumidity={WeatherHumidity}\n                            WeatherSensation={WeatherSensation}\n                            WeatherTemp={WeatherTemp}\n                            WeatherTempMax={WeatherTempMax}\n                            WeatherTempMin={WeatherTempMin}\n                        />\n                </div>\n                <div className='div-weather-future'>\n                    {\n                        SelectedCityForecastWeek.map((forecast,key)=>{\n                            return (\n                                <Pin\n                                    key={key}\n                                    WeatherIcon={forecast.WeatherIcon}\n                                    WeatherDescription={forecast.WeatherDescription}\n                                    WeatherHumidity={forecast.WeatherHumidity}\n                                    WeatherSensation={forecast.WeatherSensation}\n                                    WeatherTemp={forecast.WeatherTemp}\n                                    WeatherTempMax={forecast.WeatherTempMax}\n                                    WeatherTempMin={forecast.WeatherTempMin}\n                                />\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n\t);\n}","import React from 'react';\nimport './index.css'\nimport PinContainer from '../PinContainer'\nimport { GetAllCountries, GetAllStatesFromCountry, GetAllCitiesFromState} from '../../api'\nimport logo from '../../assets/icon.png'\nimport { useEffect,useState } from 'react';\nexport default function LocationSelector() {\n  const [Countries, setCountries] = useState([]);\n  const [Country, setCountry] = useState(null);\n  const [States, setStates] = useState([]);\n  const [State, setState] = useState(null);\n  const [Cities, setCities] = useState([]);\n  const [City, setCity] = useState(null);\n\n  useEffect(()=>{\n    ( async ()=>{\n        const contries=await GetAllCountries()\n        setCountries(contries)\n      }\n    )();\n  },[])\n\n  useEffect(()=>{\n    ( async ()=>{\n        if(Country==null) return;\n        const states=await GetAllStatesFromCountry(Country.iso2)\n        setStates(states)\n      }\n    )();\n  },[Country])\n\n  useEffect(()=>{\n    ( async ()=>{\n        if(Country==null||State==null) return;\n        const cities=await GetAllCitiesFromState(Country.iso2,State.iso2)\n        setCities(cities)\n      }\n    )();\n  },[State])\n\n  return (\n    <div>\n      <div className='div-logo'>\n        <img src={logo} alt=\"logo\" className='logo'/>\n      </div>\n      <div className='div-inputs'>\n        <div>\n          <div className='inputs'>\n            <select\n                className='inputs'\n                name='country-list' \n                placeholder='Select a Country'\n                onChange={(event)=>{\n                  const select=event.target\n                  const selectedIndex=select.selectedIndex\n                  const selectedOption=select.options[selectedIndex]\n                  const iso2=selectedOption.value\n                  const name=selectedOption.text\n                  setCountry(\n                    {\n                      name,\n                      iso2\n                    }\n                  )\n                }}\n            \n            >\n                <option value={null}>Select a country</option>\n                {\n                  Countries.map((country,key)=>{\n                    return(\n                      <option key={key} value={country.iso2} >{country.name}</option>\n                    )\n                  })\n                }\n            </select>  \n          </div>\n          <div className='inputs'>\n            <select \n                className='inputs'\n                name='state-list' \n                placeholder='Select a State'\n                onChange={(event)=>{\n                  const select=event.target\n                  const selectedIndex=select.selectedIndex\n                  const selectedOption=select.options[selectedIndex]\n                  const iso2=selectedOption.value\n                  const name=selectedOption.text\n                  setState(\n                    {\n                      name,\n                      iso2\n                    }\n                  )\n                }}\n            >\n                <option value={null}>Select a state</option>\n                {\n                  States.map((state,key)=>{\n                    return(\n                      <option key={key} value={state.iso2}>{state.name}</option>\n                    )\n                  })\n                }\n            </select>  \n          </div>\n          <div className='inputs'>\n            <select \n                className='inputs'\n                name='cities-list' \n                placeholder='Select a City'\n                onChange={(event)=>{\n                  const select=event.target\n                  const selectedIndex=select.selectedIndex\n                  const selectedOption=select.options[selectedIndex]\n                  const name=selectedOption.text\n                  setCity({\n                    name,\n                    CountryIso:Country.iso2,\n                    StateIso:State.iso2,\n                  })\n                }}\n            >\n                <option value={null}>Select a City</option>\n                {\n                  Cities.map((city,key)=>{\n                    return(\n                      <option key={key}>{city.name}</option>\n                    )\n                  })\n                }\n            </select>  \n          </div>\n        </div>\n      </div>\n      <div>\n          <PinContainer City={City}/>\n      </div>\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport LocationSelector from './components/LocationSelector';\nfunction App() {\n\n  return (\n    <LocationSelector/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","module.exports = __webpack_public_path__ + \"static/media/icon.93ad17a0.png\";"],"sourceRoot":""}