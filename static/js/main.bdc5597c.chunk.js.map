{"version":3,"sources":["assets/icon.png","api.js","components/Pin/index.js","components/PinContainer/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","API_KEY","process","GetCoordinatesFromCity","_GetCoordinatesFromCity","apply","this","arguments","_callee","cityname","statecode","countrycode","limit","response","_args","_regeneratorRuntime","wrap","_context","prev","next","length","undefined","axios","get","concat","sent","abrupt","data","t0","stop","GetWeekForecastByCoords","_x","_x2","_GetWeekForecastByCoords","_callee2","lat","lon","_context2","GetForecastByCoords","_x3","_x4","_GetForecastByCoords","_callee3","_context3","WeatherPin","props","react_default","a","createElement","className","src","WeatherIcon","alt","WeatherDescription","WeatherTemp","WeatherTempMin","WeatherTempMax","WeatherSensation","WeatherHumidity","backgroundImages","Home","_useState","useState","_useState2","Object","slicedToArray","SelectedCity","setSelectedCity","_useState3","_useState4","SelectedCityForecastWeek","setSelectedCityForecastWeek","_useState5","_useState6","setWeathericon","_useState7","_useState8","setWeatherDescription","_useState9","_useState10","setWeatherTemp","_useState11","_useState12","setWeatherTempMin","_useState13","_useState14","setWeatherTempMax","_useState15","_useState16","setWeatherHumidity","_useState17","_useState18","setWeatherSensation","getCoordinates","_getCoordinates","asyncToGenerator","PinContainer_regeneratorRuntime","mark","CoordFromCity","_CoordFromCity$","name","state","country","getForecast","_getForecast","_callee4","weekforecast","temperatures","weather","_context4","main","icon","description","humidity","feels_like","temp","temp_max","temp_min","getForecastWeek","_getForecastWeek","_callee5","forecasts","forecastWeek","loadedForecast","dayCount","_iterator","_step","_loop","_context5","list","_createForOfIteratorHelper","forecast","value","forecastDate","Date","dt","find","date","getDate","getMonth","getFullYear","_forecast$main","_forecast$weather$","push","s","n","done","e","f","finish","useEffect","key","document","getElementsByTagName","style","backgroundImage","logo","map","App","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bdc5597c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.93ad17a0.png\";","import axios   from 'axios';\n\nconst API_KEY = process.env.REACT_APP_WHEATER_API_KEY;\n\nexport async function GetCoordinatesFromCity(cityname=\"Rio Grande\", statecode, countrycode=\"BR\", limit=5) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${cityname}${statecode ? \",\"+statecode : \"\" }${countrycode ? \",\"+countrycode : \"\" }${limit ? \"&limit=\"+limit : \"\" }&appid=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\n\nexport async function GetWeekForecastByCoords(lat, lon) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\n\nexport async function GetForecastByCoords(lat, lon) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}","import React from 'react';\nimport './index.css';\nexport default function WeatherPin(props) {\n    return (\n        <div className='main-div'>\n            <div className='div-imagem'>\n                <img className='imagem' src={props.WeatherIcon} alt=\"weather\"></img>    \n                <p className='currentStatus'>{props.WeatherDescription}</p>\n            </div>\n            <div className='div-info'>\n                <div className='div-temps'>\n                    <p className='currentTemp'>{props.WeatherTemp}oC</p>\n                    <p>Min-Max</p>\n                    <div className='div-min-max'>\n                        <p className='currentTempMin'>{props.WeatherTempMin}oC</p>\n                        <p className='currentTempMax'>{props.WeatherTempMax}oC</p>\n                    </div>\n                </div>\n                <p className='currentSensation'>Sensation:{props.WeatherSensation}oC</p>\n                <p className='currentHumidity'>Humidity:{props.WeatherHumidity}%</p>\n            </div>\n        </div>\n\t);\n}","import React from \"react\";\nimport './index.css';\nimport {GetCoordinatesFromCity,GetForecastByCoords,GetWeekForecastByCoords} from '../../api'\nimport { useEffect,useState } from 'react';\nimport Pin from '../Pin'\nimport logo from '../../assets/icon.png'\nconst backgroundImages=[]\n        backgroundImages[\"clear sky\"]=\"https://img3.badfon.ru/original/2560x1600/1/b8/nebo-nebesa-sin-sineva.jpg\";\n        backgroundImages[\"few clouds\"]=\"https://bgfons.com/uploads/clouds/clouds_texture2887.jpg\";\n        backgroundImages[\"scattered clouds\"]=\"https://getwallpapers.com/wallpaper/full/6/5/4/1009663-cloud-desktop-background-1920x1080-windows-xp.jpg\";\n        backgroundImages[\"broken clouds\"]=\"https://wallpapercave.com/wp/wp6932215.jpg\";\n        backgroundImages[\"shower rain\"]=\"https://www.yahire.com/blogs/wp-content/uploads/2016/06/rain-shelter.jpg\";\n        backgroundImages[\"rain\"]=\"https://wallpapercave.com/wp/wp2519239.jpg\";\n        backgroundImages[\"thunderstorm\"]=\"https://wallpapercave.com/wp/wp9722346.jpg\";\n        backgroundImages[\"snow\"]=\"https://images.hdqwalls.com/download/forest-winter-snow-3840x2400.jpg\";\n        backgroundImages[\"mist\"]=\"https://res.allmacwallpaper.com/get/Retina-MacBook-Air-13-inch-wallpapers/Day-10--unsplashdaily-2560x1600/17491-11.jpg\";\n\nfunction changeBackground(key){\n    if(key==null) return;\n    const body=document.getElementsByTagName(\"body\")[0]\n    body.style.backgroundImage=`url(${backgroundImages[key]})`\n}\n\n\nexport default function Home() {\n    const [SelectedCity,setSelectedCity] = useState(null);\n\n    const [SelectedCityForecastWeek,setSelectedCityForecastWeek] = useState([]);\n    \n    const [WeatherIcon, setWeathericon] = useState(null)\n    const [WeatherDescription, setWeatherDescription] = useState(null)\n    const [WeatherTemp, setWeatherTemp] = useState(null)\n    const [WeatherTempMin, setWeatherTempMin] = useState(null)\n    const [WeatherTempMax, setWeatherTempMax] = useState(null)\n    const [WeatherHumidity, setWeatherHumidity] = useState(null)\n    const [WeatherSensation, setWeatherSensation] = useState(null)\n    \n    async function getCoordinates(){\n        const CoordFromCity=await GetCoordinatesFromCity()\n        const { name,state,lat,lon,country }=CoordFromCity[0];\n        setSelectedCity(\n            {\n                name,\n                state,\n                lat,\n                lon,\n                country\n            }\n        )   \n    }\n    async function getForecast(){\n        const weekforecast=await GetForecastByCoords(SelectedCity.lat,SelectedCity.lon)\n        const temperatures=weekforecast.main\n        const weather=weekforecast.weather[0]\n      \n\n        setWeathericon(`http://openweathermap.org/img/wn/${weather.icon}@2x.png`);\n        setWeatherDescription(weather.description);\n\n        setWeatherHumidity(temperatures.humidity);\n        setWeatherSensation(temperatures.feels_like);\n        setWeatherTemp(temperatures.temp);\n        setWeatherTempMax(temperatures.temp_max);\n        setWeatherTempMin(temperatures.temp_min);\n    }\n    async function getForecastWeek(){\n        const weekforecast=await GetWeekForecastByCoords(SelectedCity.lat,SelectedCity.lon)\n        const forecasts=[];\n        const forecastWeek=weekforecast.list\n        const loadedForecast=[];\n        let dayCount=1;\n        for (let forecast of forecastWeek){\n            const forecastDate=new Date(forecast.dt*1000)\n            const dayAlreadyLoaded=loadedForecast.find(date=>date===`${forecastDate.getDate()}/${forecastDate.getMonth()+1}/${forecastDate.getFullYear()}`)\n            if (dayAlreadyLoaded!=null||dayCount>3) continue;\n            const { temp,temp_min,temp_max,humidity,feels_like }=forecast.main\n            const { description,icon}=forecast.weather[0]\n            forecasts.push(\n                {\n                    WeatherTemp:temp,\n                    WeatherTempMin:temp_min,\n                    WeatherTempMax:temp_max,\n                    WeatherHumidity:humidity,\n                    WeatherSensation:feels_like,\n                    WeatherDescription:description,\n                    WeatherIcon:`http://openweathermap.org/img/wn/${icon}@2x.png`\n                }\n            )\n            loadedForecast.push(`${forecastDate.getDate()}/${forecastDate.getMonth()+1}/${forecastDate.getFullYear()}`);\n            dayCount++\n        }\n        setSelectedCityForecastWeek(forecasts)\n    }\n    useEffect(()=>{\n        if(SelectedCity==null) return;\n        (async ()=>{\n            await getForecast()\n            await getForecastWeek()\n        })() \n\n    },[SelectedCity])\n    useEffect(() => {(async ()=>await getCoordinates())()}, [])\n    useEffect(()=>{changeBackground(WeatherDescription)},[WeatherDescription])\n    return (\n        <div className=\"App\">\n            <div className='main-div-container'>\n                <div className='div-logo'>\n                    <img src={logo} alt=\"logo\" className='logo'/>\n                </div>\n\n                <div className='div-weather-now'>\n                    <Pin \n                        WeatherIcon={WeatherIcon}\n                        WeatherDescription={WeatherDescription}\n                        WeatherHumidity={WeatherHumidity}\n                        WeatherSensation={WeatherSensation}\n                        WeatherTemp={WeatherTemp}\n                        WeatherTempMax={WeatherTempMax}\n                        WeatherTempMin={WeatherTempMin}\n                    />\n                </div>\n                <div className='div-weather-future'>\n\n                    {\n                        SelectedCityForecastWeek.map((forecast,key)=>{\n                            return (\n                                <Pin\n                                    key={key}\n                                    WeatherIcon={forecast.WeatherIcon}\n                                    WeatherDescription={forecast.WeatherDescription}\n                                    WeatherHumidity={forecast.WeatherHumidity}\n                                    WeatherSensation={forecast.WeatherSensation}\n                                    WeatherTemp={forecast.WeatherTemp}\n                                    WeatherTempMax={forecast.WeatherTempMax}\n                                    WeatherTempMin={forecast.WeatherTempMin}\n                                />\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n\t);\n}","import React from 'react';\nimport PinContainer from './components/PinContainer'\nfunction App() {\n  return (\n    <PinContainer/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}