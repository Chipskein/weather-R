{"version":3,"sources":["api.js","components/Pin/index.js","components/PinContainer/index.js","App.js","index.js","assets/icon.png"],"names":["API_KEY","process","GetCoordinatesFromCity","_GetCoordinatesFromCity","apply","this","arguments","_callee","cityname","statecode","countrycode","limit","response","_args","_regeneratorRuntime","wrap","_context","prev","next","length","undefined","axios","get","concat","sent","abrupt","data","t0","stop","GetWeekForecastByCoords","_x","_x2","_GetWeekForecastByCoords","_callee2","lat","lon","_context2","GetForecastByCoords","_x3","_x4","_GetForecastByCoords","_callee3","_context3","WeatherPin","props","react_default","a","createElement","className","src","WeatherIcon","alt","WeatherDescription","WeatherTemp","WeatherTempMin","WeatherTempMax","WeatherSensation","WeatherHumidity","backgroundImages","Home","_useState","useState","_useState2","Object","slicedToArray","SelectedCity","setSelectedCity","_useState3","_useState4","SelectedCityForecastWeek","setSelectedCityForecastWeek","_useState5","_useState6","SearchCity","setSearchCity","_useState7","_useState8","SearchCountryISO","setSearchCountryISO","_useState9","logo","_useState10","setWeathericon","_useState11","_useState12","setWeatherDescription","_useState13","_useState14","setWeatherTemp","_useState15","_useState16","setWeatherTempMin","_useState17","_useState18","setWeatherTempMax","_useState19","_useState20","setWeatherHumidity","_useState21","_useState22","setWeatherSensation","getCoordinates","_getCoordinates","asyncToGenerator","PinContainer_regeneratorRuntime","mark","countryiso","CoordFromCity","_CoordFromCity$","name","state","country","getForecast","_getForecast","_callee4","weekforecast","temperatures","weather","_context4","main","icon","description","humidity","feels_like","temp","temp_max","temp_min","getForecastWeek","_getForecastWeek","_callee5","forecasts","forecastWeek","loadedForecast","dayCount","_iterator","_step","_loop","_context5","list","_createForOfIteratorHelper","forecast","value","forecastDate","Date","dt","find","date","getDate","getMonth","getFullYear","_forecast$main","_forecast$weather$","push","s","n","done","e","f","finish","useEffect","key","body","document","getElementsByTagName","style","backgroundImage","changeBackground","type","placeholder","onChange","event","target","size","onClick","map","App","ReactDOM","createRoot","getElementById","render","StrictMode","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.aefc5fa9.chunk.js","sourcesContent":["import axios   from 'axios';\n\nconst API_KEY = process.env.REACT_APP_WHEATER_API_KEY;\n\nexport async function GetCoordinatesFromCity(cityname=\"Rio Grande\", statecode, countrycode=\"BR\", limit=5) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${cityname}${statecode ? \",\"+statecode : \"\" }${countrycode ? \",\"+countrycode : \"\" }${limit ? \"&limit=\"+limit : \"\" }&appid=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\n\nexport async function GetWeekForecastByCoords(lat, lon) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}\n\nexport async function GetForecastByCoords(lat, lon) {\n    try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n        return response.data;\n    } catch (error) {\n        return null;\n    }\n}","import React from 'react';\nimport './index.css';\nexport default function WeatherPin(props) {\n    return (\n        <div className='main-div'>\n            <div className='div-imagem'>\n                <img className='imagem' src={props.WeatherIcon} alt=\"weather\"></img>    \n                <p className='currentStatus'>{props.WeatherDescription}</p>\n            </div>\n            <div className='div-info'>\n                <div className='div-temps'>\n                    <p className='currentTemp'>{props.WeatherTemp}oC</p>\n                    <p>Min-Max</p>\n                    <div className='div-min-max'>\n                        <p className='currentTempMin'>{props.WeatherTempMin}oC</p>\n                        <p className='currentTempMax'>{props.WeatherTempMax}oC</p>\n                    </div>\n                </div>\n                <p className='currentSensation'>Sensation:{props.WeatherSensation}oC</p>\n                <p className='currentHumidity'>Humidity:{props.WeatherHumidity}%</p>\n            </div>\n        </div>\n\t);\n}","import React from \"react\";\nimport './index.css';\nimport {GetCoordinatesFromCity,GetForecastByCoords,GetWeekForecastByCoords} from '../../api'\nimport { useEffect,useState } from 'react';\nimport Pin from '../Pin'\nimport logo from '../../assets/icon.png'\nconst backgroundImages=[]\n        backgroundImages[\"clear sky\"]=\"https://img3.badfon.ru/original/2560x1600/1/b8/nebo-nebesa-sin-sineva.jpg\";\n        backgroundImages[\"few clouds\"]=\"https://bgfons.com/uploads/clouds/clouds_texture2887.jpg\";\n        backgroundImages[\"scattered clouds\"]=\"https://getwallpapers.com/wallpaper/full/6/5/4/1009663-cloud-desktop-background-1920x1080-windows-xp.jpg\";\n        backgroundImages[\"broken clouds\"]=\"https://wallpapercave.com/wp/wp6932215.jpg\";\n        backgroundImages[\"overcast clouds\"]=\"https://wallpapercave.com/wp/wp6932215.jpg\";\n        backgroundImages[\"shower rain\"]=\"https://www.yahire.com/blogs/wp-content/uploads/2016/06/rain-shelter.jpg\";\n        backgroundImages[\"rain\"]=\"https://wallpapercave.com/wp/wp2519239.jpg\";\n        backgroundImages[\"thunderstorm\"]=\"https://wallpapercave.com/wp/wp9722346.jpg\";\n        backgroundImages[\"snow\"]=\"https://images.hdqwalls.com/download/forest-winter-snow-3840x2400.jpg\";\n        backgroundImages[\"mist\"]=\"https://res.allmacwallpaper.com/get/Retina-MacBook-Air-13-inch-wallpapers/Day-10--unsplashdaily-2560x1600/17491-11.jpg\";\n\nfunction changeBackground(key){\n    const body=document.getElementsByTagName(\"body\")[0]\n    if(key==null){ \n        body.style.backgroundImage=\"\";\n        return;\n    }\n    body.style.backgroundImage=`url(${backgroundImages[key]})`\n}\n\n\nexport default function Home() {\n    const [SelectedCity,setSelectedCity] = useState(null);\n    const [SelectedCityForecastWeek,setSelectedCityForecastWeek] = useState([]);\n    \n    const [SearchCity, setSearchCity] = useState(null);\n    const [SearchCountryISO, setSearchCountryISO] = useState(null);\n\n\n    const [WeatherIcon, setWeathericon] = useState(logo)\n    const [WeatherDescription, setWeatherDescription] = useState('Weather-R')\n    const [WeatherTemp, setWeatherTemp] = useState(0)\n    const [WeatherTempMin, setWeatherTempMin] = useState(0)\n    const [WeatherTempMax, setWeatherTempMax] = useState(0)\n    const [WeatherHumidity, setWeatherHumidity] = useState(0)\n    const [WeatherSensation, setWeatherSensation] = useState(0)\n    \n    async function getCoordinates(cityname,statecode,countryiso){\n        const CoordFromCity=await GetCoordinatesFromCity(cityname,statecode,countryiso)\n        if(CoordFromCity==null||CoordFromCity[0]==null) {\n            setWeatherDescription(\"NOT FOUND\");\n            setSearchCountryISO(\"\");\n            setSearchCity(\"\");\n            setWeathericon(logo);\n            setWeatherTemp(0);\n            setWeatherTempMin(0);\n            setWeatherTempMax(0);\n            setWeatherHumidity(0);\n            setWeatherSensation(0);\n            setSelectedCity(null);\n            setSelectedCityForecastWeek([]);\n            return\n        };\n        const { name,state,lat,lon,country }=CoordFromCity[0];\n        setSelectedCity(\n            {\n                name,\n                state,\n                lat,\n                lon,\n                country\n            }\n        )   \n    }\n    async function getForecast(){\n        const weekforecast=await GetForecastByCoords(SelectedCity.lat,SelectedCity.lon)\n        const temperatures=weekforecast.main\n        const weather=weekforecast.weather[0]\n\n        setWeathericon(`http://openweathermap.org/img/wn/${weather.icon}@2x.png`);\n        setWeatherDescription(weather.description);\n\n        setWeatherHumidity(temperatures.humidity);\n        setWeatherSensation(temperatures.feels_like);\n        setWeatherTemp(temperatures.temp);\n        setWeatherTempMax(temperatures.temp_max);\n        setWeatherTempMin(temperatures.temp_min);\n    }\n    async function getForecastWeek(){\n        const weekforecast=await GetWeekForecastByCoords(SelectedCity.lat,SelectedCity.lon)\n        const forecasts=[];\n        const forecastWeek=weekforecast.list\n        const loadedForecast=[];\n        let dayCount=1;\n        for (let forecast of forecastWeek){\n            const forecastDate=new Date(forecast.dt*1000)\n            const dayAlreadyLoaded=loadedForecast.find(date=>date===`${forecastDate.getDate()}/${forecastDate.getMonth()+1}/${forecastDate.getFullYear()}`)\n            if (dayAlreadyLoaded!=null||dayCount>3) continue;\n            const { temp,temp_min,temp_max,humidity,feels_like }=forecast.main\n            const { description,icon}=forecast.weather[0]\n            forecasts.push(\n                {\n                    WeatherTemp:temp,\n                    WeatherTempMin:temp_min,\n                    WeatherTempMax:temp_max,\n                    WeatherHumidity:humidity,\n                    WeatherSensation:feels_like,\n                    WeatherDescription:description,\n                    WeatherIcon:`http://openweathermap.org/img/wn/${icon}@2x.png`\n                }\n            )\n            loadedForecast.push(`${forecastDate.getDate()}/${forecastDate.getMonth()+1}/${forecastDate.getFullYear()}`);\n            dayCount++\n        }\n        setSelectedCityForecastWeek(forecasts)\n    }\n    useEffect(()=>{\n        if(SelectedCity==null) return;\n        (async ()=>{\n            await getForecast()\n            await getForecastWeek()\n        })() \n\n    },[SelectedCity])\n    useEffect(()=>{changeBackground(WeatherDescription)},[WeatherDescription])\n    return (\n        <div className=\"App\">\n            <div className='main-div-container'>\n                <div className='div-logo'>\n                    <img src={logo} alt=\"logo\" className='logo'/>\n                </div>\n                <div className=\"div-input\">\n                        <input \n                            type=\"text\" \n                            name=\"city\" \n                            placeholder=\"City name Ex:Rio Grande\"\n                            onChange={(event)=>setSearchCity(event.target.value)}\n                        />\n                        <input \n                            type=\"text\" \n                            name=\"country\" \n                            placeholder=\"CountryIso Ex:BR\" \n                            size={12}\n                            onChange={(event)=>setSearchCountryISO(event.target.value)}\n                        />    \n                        <input \n                            type=\"button\"\n                            value=\"Get Forecast\"\n                            onClick={()=>(async ()=>await getCoordinates(SearchCity,null,SearchCountryISO))()}\n                        />\n                </div>\n                <div className='div-weather-now'>\n\n                        <Pin \n                            WeatherIcon={WeatherIcon}\n                            WeatherDescription={WeatherDescription}\n                            WeatherHumidity={WeatherHumidity}\n                            WeatherSensation={WeatherSensation}\n                            WeatherTemp={WeatherTemp}\n                            WeatherTempMax={WeatherTempMax}\n                            WeatherTempMin={WeatherTempMin}\n                        />\n                </div>\n                <div className='div-weather-future'>\n                    {\n                        SelectedCityForecastWeek.map((forecast,key)=>{\n                            return (\n                                <Pin\n                                    key={key}\n                                    WeatherIcon={forecast.WeatherIcon}\n                                    WeatherDescription={forecast.WeatherDescription}\n                                    WeatherHumidity={forecast.WeatherHumidity}\n                                    WeatherSensation={forecast.WeatherSensation}\n                                    WeatherTemp={forecast.WeatherTemp}\n                                    WeatherTempMax={forecast.WeatherTempMax}\n                                    WeatherTempMin={forecast.WeatherTempMin}\n                                />\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n\t);\n}","import React from 'react';\nimport PinContainer from './components/PinContainer'\nfunction App() {\n  return (\n    <PinContainer/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","module.exports = __webpack_public_path__ + \"static/media/icon.93ad17a0.png\";"],"sourceRoot":""}